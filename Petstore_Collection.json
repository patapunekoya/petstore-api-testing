{
	"info": {
		"_postman_id": "5f0c8239-8510-49eb-b10d-d8c3ca5e22aa",
		"name": "Petstore – QA Portfolio",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "48319095",
		"_collection_link": "https://avionics-geoscientist-85600705-8098669.postman.co/workspace/Ph%25C6%25B0%25E1%25BB%259Bc-Phan-T%25E1%25BA%25A5n's-Workspace~c81337fb-fa82-45cb-81ff-ae6183d9dfeb/collection/48319095-5f0c8239-8510-49eb-b10d-d8c3ca5e22aa?action=share&source=collection_link&creator=48319095"
	},
	"item": [
		{
			"name": "Tạo pet",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"runId\", Date.now());\r",
							"if (!pm.environment.get(\"petId\")) {\r",
							"  pm.environment.set(\"petId\", Math.floor(100000 + Math.random() * 900000)); // 6 chữ số\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", () => pm.response.to.have.status(200));\r",
							"const j = pm.response.json();\r",
							"pm.test(\"Có id và name\", () => {\r",
							"  pm.expect(j).to.have.property(\"id\");\r",
							"  pm.expect(j).to.have.property(\"name\");\r",
							"});\r",
							"pm.environment.set(\"petId\", j.id); // nếu bạn không tự set trước\r",
							"// thời gian nên nới lên để tránh flake\r",
							"pm.test(\"Response < 2000ms\", () => pm.expect(pm.response.responseTime).below(2000));\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": {{petId}},\r\n  \"name\": \"doggo-{{runId}}\",\r\n  \"status\": \"available\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/pet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "Lấy pet theo ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const retryKey = \"getPetRetry\";\r",
							"const maxRetry = 2;\r",
							"\r",
							"if (pm.response.code === 404) {\r",
							"  const n = parseInt(pm.environment.get(retryKey) || \"0\", 10);\r",
							"  if (n < maxRetry) {\r",
							"    pm.environment.set(retryKey, n + 1);\r",
							"    console.warn(`404 sau khi tạo, thử lại lần ${n + 1}`);\r",
							"    postman.setNextRequest(\"Lấy pet theo ID\"); // lặp lại chính request này\r",
							"    return;\r",
							"  }\r",
							"}\r",
							"\r",
							"// reset counter sau khi thành công hoặc hết retry\r",
							"pm.environment.unset(retryKey);\r",
							"\r",
							"// Khi tới đây, coi như ổn rồi\r",
							"pm.test(\"Status 200\", () => pm.response.to.have.status(200));\r",
							"const j = pm.response.json();\r",
							"pm.test(\"Đúng petId\", () => pm.expect(j.id).to.eql(parseInt(pm.environment.get(\"petId\"))));\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/pet/{{petId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet",
						"{{petId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cập nhật pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200\", () => pm.response.to.have.status(200));\r",
							"const j = pm.response.json();\r",
							"pm.test(\"Đã cập nhật name\", () => pm.expect(j.name).to.include(\"-updated\"));\r",
							"pm.test(\"Đã cập nhật status\", () => pm.expect(j.status).to.eql(\"sold\"));\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": {{petId}},\r\n  \"name\": \"doggo-{{runId}}-updated\",\r\n  \"status\": \"sold\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/pet",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "Xóa",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Xóa thành công (200/404 đều chấp nhận)\", () => {\r",
							"  pm.expect([200, 404]).to.include(pm.response.code);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/pet/{{petId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet",
						"{{petId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "negative",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Không tìm thấy\", () => pm.expect([404, 400]).to.include(pm.response.code));\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"runId\", Date.now());\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/pet/999999999",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pet",
						"999999999"
					]
				}
			},
			"response": []
		}
	]
}